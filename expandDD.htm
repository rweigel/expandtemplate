<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
 <html>
 	<head>
 		<meta http-equiv="Content-type" content="text/html;charset=UTF-8">
 		<title>DD Expander</title>
		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"></script>
 		<script src="tests/expandDD.tests.js"></script>
 		
 		<script>

 		function range(start, stop, step){
 	 		  var step = parseInt(step || "1");
 	 		  var a=parseInt(start);
 	 		  var b=parseInt(stop);
 	 		  var str = "";
 	 		  var i = a-step;
 	 		  while (i < b) {str = str + (i + step) + ",";i=i+step;};
 	 		  return str.slice(0,-1);
 	 	}
 		
 		function expand(list,Columns) {
 	 		var List = new Array();
 			list = list.replace(/\(()\)|\[\]/g,"");
 	 		list = list.replace(/(\d+)-(\d+)/g,         function (match,a,b){return range(a,b)});
 			list = list.replace(/(\d+)\:(\d+)\:(\d+)/g, function (match,a,b,step){return range(a,b,step)})
 			list = list.replace(/(\d+)\:(\d+)/g,        function (match,a,b){return range(a,b,1)});
 			list = list.replace(/\((.*?)\)|\[(.*?)\]/g, function (match,a,b,step){return match.replace(/,/g,";")});			
 			if (list !== "") {
	 			list.split(",").forEach(function (el,i) {
	 					List[i] = el.replace(/;/g,",")
	 			});
 			}
 			if (Columns) {
 				if (List.length > Columns.length) {
 					console.log("Array generated by input is longer than Columns array.  Removing elements from end.");
 					List.splice(0,Columns.length-1);
 				}
 				List.forEach(function (el,i) {
 		 			List[i] = el.replace(/\(\:\)|\[\:\]/g,function () {return range(0,Columns[i].split(",").length-1)});
 					List[i] = el.replace(/\(\:\)|\[\:\]/g,function () {return range(0,Columns[i].split(",").length-1)});
 					List[i] = List[i].replace(/\(|\)|\[|\]/g,"");
 	 			})
 	 			if (List.length < Columns.length) {
 	 				console.log("Array generated by input is shorter than Columns array.  Appending elements to end.");
 	 				if (List[List.length-1] === ":") {
 	 					// Special case when last part of string is ":"
 	 					List.pop();
 	 					var j = 0;
 	 					while (j < Columns.length-1) {List.push(""+j);j=j+1;}
 	 				} else {
 	 	 				while (List.length < Columns.length) {List.push("")}
 	 				}
 	 			}
	 			if (List[List.length-1] === ":") {
	 				console.log("****")
	 				console.log(List)
	 				// Special case where (:) or [:] was meant at the end, but : was given.
	 				List[List.length-1] = "";
 	 				var j = 0;
 	 				while (j < Columns[List.length-1].match(/\d+,/g).length+1) {List[List.length-1] += ""+j+",";j=j+1;}
 	 				List[List.length-1] = List[List.length-1].replace(/,$/,"");
	 			}
 			}
	 		return List;
 		}

 		$(document).ready(function(){
	 		for (var j=0;j < Tests.length;j++) {
		 		Tests[j].groupTypes = new Array();
		 		expand(Tests[j].columns).forEach(function (el,i) {
		 							Tests[j].groupTypes[i] = "scalar";
				 					if (el.match(/\[/)) {Tests[j].groupTypes[i] = "spectrogram"}
				 					if (el.match(/\(/)) {Tests[j].groupTypes[i] = "vector"}})
				console.log("--");
				Tests[j].Columns = expand(Tests[j].columns);
				$("#columns").val(JSON.stringify(Tests[j].columns));
				$("#Columns").val(JSON.stringify(Tests[j].Columns));
		 		console.log(Tests[j].columns);
				console.log(Tests[j].Columns);
		 		console.log(Check[j].Columns);
		 		for (var k=0;k<Tests[j].Columns.length;k++)
					console.log(Tests[j].Columns[k] === Check[j].Columns[k])
	
				Tests[j].ColumnLabelValues = expand(Tests[j].columnLabelValues,Tests[j].Columns);
		 		$("#columnLabelValues").val(JSON.stringify(Tests[j].columnLabelValues));
		 		$("#ColumnLabelValues").val(JSON.stringify(Tests[j].ColumnLabelValues));
		 		console.log(Tests[j].columnLabelValues);
		 		console.log(Tests[j].ColumnLabelValues);
		 		console.log(Check[j].ColumnLabelValues);
		 		for (var k=0;k<Tests[j].ColumnLabelValues.length;k++)
					console.log(Tests[j].ColumnLabelValues[k] === Check[j].ColumnLabelValues[k])

	 		}
 		});

 		</script>
	</head>
	<body>
	<div style="width:50%">
		columns <input id="columns" style="width:100%"type="text"></input>
		columns expanded <input id="Columns" style="width:100%"type="text"></input>
		<br/><br/>
		columnLabelValues <input id="columnLabelValues" style="width:100%"type="text"></input>
		columnLabelValues expanded <input id="ColumnLabelValues" style="width:100%"type="text"></input>
	</div>
	</body>
</html>
